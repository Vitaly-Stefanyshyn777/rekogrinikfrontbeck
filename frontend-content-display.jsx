import React, { useState, useEffect } from "react";

// API –∫–ª—ñ—î–Ω—Ç –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ–Ω—Ç–µ–Ω—Ç—É
const API_BASE_URL = "http://localhost:3002/api/v1";

class PublicContentApi {
  constructor(baseUrl = API_BASE_URL) {
    this.baseUrl = baseUrl;
  }

  // –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –±–ª–æ–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç—É
  async getContent() {
    const response = await fetch(`${this.baseUrl}/public/content`);
    if (!response.ok) throw new Error("Failed to fetch content");
    return response.json();
  }
}

const publicContentApi = new PublicContentApi();

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–ª–æ–∫—É –∫–æ–Ω—Ç–µ–Ω—Ç—É
const ContentBlock = ({ block }) => {
  if (!block.text && !block.imageUrl) {
    return null; // –ù–µ –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ –±–ª–æ–∫–∏
  }

  return (
    <div className="content-block mb-8">
      {block.imageUrl && (
        <div className="mb-4">
          <img
            src={block.imageUrl}
            alt={block.name}
            className="w-full h-64 object-cover rounded-lg"
            onError={(e) => {
              console.log("Image failed to load:", block.imageUrl);
              e.currentTarget.style.display = "none";
            }}
          />
        </div>
      )}

      {block.text && (
        <div className="text-content">
          <h2 className="text-2xl font-bold mb-4">{block.name}</h2>
          <p className="text-gray-700 leading-relaxed">{block.text}</p>
        </div>
      )}
    </div>
  );
};

// –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–Ω—Ç—É
const ContentDisplay = () => {
  const [content, setContent] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    loadContent();
  }, []);

  const loadContent = async () => {
    try {
      setLoading(true);
      const data = await publicContentApi.getContent();
      setContent(data);
    } catch (err) {
      setError(err.message);
    } finally {
      setLoading(false);
    }
  };

  if (loading)
    return <div className="text-center py-8">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–Ω—Ç—É...</div>;
  if (error)
    return (
      <div className="text-center py-8 text-red-500">–ü–æ–º–∏–ª–∫–∞: {error}</div>
    );

  // –§—ñ–ª—å—Ç—Ä—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –±–ª–æ–∫–∏ –∑ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
  const contentBlocks = content.filter((block) => block.text || block.imageUrl);

  if (contentBlocks.length === 0) {
    return (
      <div className="text-center py-12">
        <div className="text-gray-400 text-lg mb-4">
          üìù –ö–æ–Ω—Ç–µ–Ω—Ç —â–µ –Ω–µ –¥–æ–¥–∞–Ω–æ
        </div>
        <p className="text-gray-600">
          –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä —â–µ –Ω–µ –∑–∞–ø–æ–≤–Ω–∏–≤ –±–ª–æ–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç—É
        </p>
      </div>
    );
  }

  return (
    <div className="container mx-auto px-4 py-8">
      <h1 className="text-3xl font-bold mb-8 text-center">–ù–∞—à –∫–æ–Ω—Ç–µ–Ω—Ç</h1>

      <div className="space-y-8">
        {contentBlocks.map((block) => (
          <ContentBlock key={block.id} block={block} />
        ))}
      </div>
    </div>
  );
};

export default ContentDisplay;


