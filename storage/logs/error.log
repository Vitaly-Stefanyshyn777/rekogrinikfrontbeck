{"context":"BadRequestException","level":"error","message":"Bad Request Exception -> (trace not provided !)","timestamp":"2025-10-17T20:50:59.323Z"}
{"context":"BadRequestException","level":"error","message":"Bad Request Exception -> (trace not provided !)","timestamp":"2025-10-17T20:51:18.024Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-17T20:58:29.949Z"}
{"context":"TypeError","level":"error","message":"(0 , rxjs_1.lastValueFrom) is not a function -> (trace not provided !)","timestamp":"2025-10-17T21:05:08.512Z"}
{"context":"TypeError","level":"error","message":"(0 , rxjs_1.lastValueFrom) is not a function -> (trace not provided !)","timestamp":"2025-10-17T21:05:29.432Z"}
{"context":"TypeError","level":"error","message":"(0 , rxjs_1.lastValueFrom) is not a function -> (trace not provided !)","timestamp":"2025-10-17T21:09:02.280Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-17T21:10:20.460Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-17T21:16:19.595Z"}
{"context":"BadRequestException","level":"error","message":"Only image files allowed -> (trace not provided !)","timestamp":"2025-10-17T21:20:16.257Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-17T21:23:26.471Z"}
{"context":"TypeError","level":"error","message":"(0 , rxjs_1.lastValueFrom) is not a function -> (trace not provided !)","timestamp":"2025-10-17T21:26:03.987Z"}
{"context":"TypeError","level":"error","message":"(0 , rxjs_1.lastValueFrom) is not a function -> (trace not provided !)","timestamp":"2025-10-17T21:26:39.287Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-17T21:29:51.030Z"}
{"context":"TypeError","level":"error","message":"(0 , rxjs_1.lastValueFrom) is not a function -> (trace not provided !)","timestamp":"2025-10-18T04:55:10.228Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T04:55:57.684Z"}
{"context":"BadRequestException","level":"error","message":"Only image files allowed -> (trace not provided !)","timestamp":"2025-10-18T04:56:02.866Z"}
{"context":"NotFoundException","level":"error","message":"Cannot GET / -> (trace not provided !)","timestamp":"2025-10-18T05:06:42.753Z"}
{"context":"TypeError","level":"error","message":"(0 , rxjs_1.lastValueFrom) is not a function -> (trace not provided !)","timestamp":"2025-10-18T05:09:20.045Z"}
{"context":"BadRequestException","level":"error","message":"Bad Request Exception -> (trace not provided !)","timestamp":"2025-10-18T05:14:03.701Z"}
{"context":"BadRequestException","level":"error","message":"Bad Request Exception -> (trace not provided !)","timestamp":"2025-10-18T05:17:10.967Z"}
{"context":"BadRequestException","level":"error","message":"Bad Request Exception -> (trace not provided !)","timestamp":"2025-10-18T05:23:39.290Z"}
{"context":"BadRequestException","level":"error","message":"Bad Request Exception -> (trace not provided !)","timestamp":"2025-10-18T05:24:09.067Z"}
{"context":"BadRequestException","level":"error","message":"Bad Request Exception -> (trace not provided !)","timestamp":"2025-10-18T05:42:14.779Z"}
{"context":"NotFoundException","level":"error","message":"Cannot POST /api/v1/upload/photo -> (trace not provided !)","timestamp":"2025-10-18T05:48:05.349Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T05:52:28.191Z"}
{"context":"BadRequestException","level":"error","message":"Only image files allowed -> (trace not provided !)","timestamp":"2025-10-18T05:52:38.525Z"}
{"context":"BadRequestException","level":"error","message":"Only image files allowed -> (trace not provided !)","timestamp":"2025-10-18T05:52:42.912Z"}
{"context":"BadRequestException","level":"error","message":"Multipart: Unexpected end of form -> (trace not provided !)","timestamp":"2025-10-18T05:52:55.311Z"}
{"context":"BadRequestException","level":"error","message":"Multipart: Unexpected end of form -> (trace not provided !)","timestamp":"2025-10-18T05:55:26.464Z"}
{"context":"BadRequestException","level":"error","message":"Multipart: Unexpected end of form -> (trace not provided !)","timestamp":"2025-10-18T05:55:46.717Z"}
{"context":"BadRequestException","level":"error","message":"Upload failed: \nInvalid `this.prisma.galleryPhoto.create()` invocation in\n/Users/vitalikstefanisin/Documents/GitHub/rekogrinikfrontbeck/src/modules/upload/upload.controller.ts:107:52\n\n  104 );\n  105 \n  106 // 2. Зберегти в БД\n→ 107 const photo = await this.prisma.galleryPhoto.create({\n        data: {\n          albumId: '1',\n                   ~~~\n          url: 'https://res.cloudinary.com/dtgwh12jz/image/upload/v1760767118/rekogrinik/a1mvpxluzlablllvmuca.png',\n          publicId: 'rekogrinik/a1mvpxluzlablllvmuca',\n          title: 'Test Photo',\n          description: 'Test upload'\n        }\n      })\n\nArgument albumId: Got invalid value '1' on prisma.createOneGalleryPhoto. Provided String, expected Int.\n\n -> (trace not provided !)","timestamp":"2025-10-18T05:58:39.247Z"}
{"context":"BadRequestException","level":"error","message":"Upload failed: \nInvalid `this.prisma.galleryPhoto.create()` invocation in\n/Users/vitalikstefanisin/Documents/GitHub/rekogrinikfrontbeck/src/modules/upload/upload.controller.ts:107:52\n\n  104 );\n  105 \n  106 // 2. Зберегти в БД\n→ 107 const photo = await this.prisma.galleryPhoto.create({\n        data: {\n          albumId: '1',\n                   ~~~\n          url: 'https://res.cloudinary.com/dtgwh12jz/image/upload/v1760767131/rekogrinik/wvyqiwf3zfrdnifumaur.png',\n          publicId: 'rekogrinik/wvyqiwf3zfrdnifumaur',\n          title: 'Test Photo',\n          description: 'Test upload'\n        }\n      })\n\nArgument albumId: Got invalid value '1' on prisma.createOneGalleryPhoto. Provided String, expected Int.\n\n -> (trace not provided !)","timestamp":"2025-10-18T05:58:52.114Z"}
{"context":"BadRequestException","level":"error","message":"Upload failed: \nInvalid `this.prisma.galleryPhoto.create()` invocation in\n/Users/vitalikstefanisin/Documents/GitHub/rekogrinikfrontbeck/src/modules/upload/upload.controller.ts:107:52\n\n  104 );\n  105 \n  106 // 2. Зберегти в БД\n→ 107 const photo = await this.prisma.galleryPhoto.create({\n        data: {\n          albumId: '1',\n                   ~~~\n          url: 'https://res.cloudinary.com/dtgwh12jz/image/upload/v1760767146/rekogrinik/iceev27mjpdzwrvj5eft.png',\n          publicId: 'rekogrinik/iceev27mjpdzwrvj5eft',\n          title: 'Test Photo',\n          description: 'Test upload'\n        }\n      })\n\nArgument albumId: Got invalid value '1' on prisma.createOneGalleryPhoto. Provided String, expected Int.\n\n -> (trace not provided !)","timestamp":"2025-10-18T05:59:06.888Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T06:19:23.975Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T06:19:27.755Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T06:19:32.090Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T06:19:34.724Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T06:21:06.199Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T06:21:10.372Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T06:21:13.992Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T06:21:18.663Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T06:21:28.153Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T06:21:31.329Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T06:21:32.884Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T06:21:34.301Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T06:21:36.049Z"}
{"context":"NotFoundError","level":"error","message":"No User found -> (trace not provided !)","timestamp":"2025-10-18T06:22:16.249Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T06:22:47.472Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T06:24:52.379Z"}
{"context":"NotFoundException","level":"error","message":"Cannot GET /favicon.ico -> (trace not provided !)","timestamp":"2025-10-18T06:56:30.620Z"}
{"context":"PrismaClientKnownRequestError","level":"error","message":"\nInvalid `this.prisma.user.findUnique()` invocation in\n/Users/vitalikstefanisin/Documents/GitHub/rekogrinikfrontbeck/src/modules/auth/auth.jwt.strategy.ts:27:41\n\n  24 \n  25 async validate(payload: User): Promise<User> {\n  26   const email = payload.email;\n→ 27   const user = await this.prisma.user.findUnique(\nCan't reach database server at `ep-winter-shadow-addxhbeb-pooler.c-2.us-east-1.aws.neon.tech`:`5432`\n\nPlease make sure your database server is running at `ep-winter-shadow-addxhbeb-pooler.c-2.us-east-1.aws.neon.tech`:`5432`. -> (trace not provided !)","timestamp":"2025-10-18T08:53:37.463Z"}
{"context":"PrismaClientKnownRequestError","level":"error","message":"\nInvalid `this.prisma.album.findUnique()` invocation in\n/Users/vitalikstefanisin/Documents/GitHub/rekogrinikfrontbeck/src/modules/public/publicGallery.controller.ts:15:43\n\n  12 \n  13 @Get(\"albums/:slug\")\n  14 async getBySlug(@Param(\"slug\") slug: string) {\n→ 15   const album = await this.prisma.album.findUnique(\nTimed out fetching a new connection from the connection pool. More info: http://pris.ly/d/connection-pool (Current connection pool timeout: 10, connection limit: 17) -> (trace not provided !)","timestamp":"2025-10-18T10:27:51.754Z"}
{"context":"PrismaClientKnownRequestError","level":"error","message":"\nInvalid `this.prisma.album.findUnique()` invocation in\n/Users/vitalikstefanisin/Documents/GitHub/rekogrinikfrontbeck/src/modules/public/publicGallery.controller.ts:15:43\n\n  12 \n  13 @Get(\"albums/:slug\")\n  14 async getBySlug(@Param(\"slug\") slug: string) {\n→ 15   const album = await this.prisma.album.findUnique(\nTimed out fetching a new connection from the connection pool. More info: http://pris.ly/d/connection-pool (Current connection pool timeout: 10, connection limit: 17) -> (trace not provided !)","timestamp":"2025-10-18T10:27:51.769Z"}
{"context":"NotFoundError","level":"error","message":"No BeforeAfterPair found -> (trace not provided !)","timestamp":"2025-10-18T11:01:24.592Z"}
{"context":"BadRequestException","level":"error","message":"Bad Request Exception -> (trace not provided !)","timestamp":"2025-10-18T11:03:16.567Z"}
{"context":"BadRequestException","level":"error","message":"Bad Request Exception -> (trace not provided !)","timestamp":"2025-10-18T11:20:35.833Z"}
{"context":"BadRequestException","level":"error","message":"Bad Request Exception -> (trace not provided !)","timestamp":"2025-10-18T11:22:36.663Z"}
{"context":"PrismaClientKnownRequestError","level":"error","message":"\nInvalid `this.prisma.user.findUnique()` invocation in\n/Users/vitalikstefanisin/Documents/GitHub/rekogrinikfrontbeck/src/modules/auth/auth.jwt.strategy.ts:27:41\n\n  24 \n  25 async validate(payload: User): Promise<User> {\n  26   const email = payload.email;\n→ 27   const user = await this.prisma.user.findUnique(\nTimed out fetching a new connection from the connection pool. More info: http://pris.ly/d/connection-pool (Current connection pool timeout: 10, connection limit: 17) -> (trace not provided !)","timestamp":"2025-10-18T13:39:56.246Z"}
{"context":"PrismaClientKnownRequestError","level":"error","message":"\nInvalid `this.prisma.user.findUnique()` invocation in\n/Users/vitalikstefanisin/Documents/GitHub/rekogrinikfrontbeck/src/modules/auth/auth.jwt.strategy.ts:27:41\n\n  24 \n  25 async validate(payload: User): Promise<User> {\n  26   const email = payload.email;\n→ 27   const user = await this.prisma.user.findUnique(\nTimed out fetching a new connection from the connection pool. More info: http://pris.ly/d/connection-pool (Current connection pool timeout: 10, connection limit: 17) -> (trace not provided !)","timestamp":"2025-10-18T13:40:14.295Z"}
{"context":"PrismaClientKnownRequestError","level":"error","message":"\nInvalid `this.prisma.user.findUnique()` invocation in\n/Users/vitalikstefanisin/Documents/GitHub/rekogrinikfrontbeck/src/modules/auth/auth.jwt.strategy.ts:27:41\n\n  24 \n  25 async validate(payload: User): Promise<User> {\n  26   const email = payload.email;\n→ 27   const user = await this.prisma.user.findUnique(\nCan't reach database server at `ep-winter-shadow-addxhbeb-pooler.c-2.us-east-1.aws.neon.tech`:`5432`\n\nPlease make sure your database server is running at `ep-winter-shadow-addxhbeb-pooler.c-2.us-east-1.aws.neon.tech`:`5432`. -> (trace not provided !)","timestamp":"2025-10-18T13:43:21.610Z"}
{"context":"BadRequestException","level":"error","message":"Bad Request Exception -> (trace not provided !)","timestamp":"2025-10-18T13:58:34.218Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T14:01:03.992Z"}
{"context":"PrismaClientKnownRequestError","level":"error","message":"\nInvalid `this.prisma.user.create()` invocation in\n/Users/vitalikstefanisin/Documents/GitHub/rekogrinikfrontbeck/src/modules/user/user.service.ts:36:29\n\n  33 }\n  34 \n  35 async createUser(data: Prisma.UserCreateInput): Promise<User> {\n→ 36   return this.prisma.user.create(\nUnique constraint failed on the fields: (`email`) -> (trace not provided !)","timestamp":"2025-10-18T14:01:35.977Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T14:01:42.288Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T14:01:57.461Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T14:05:51.011Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T14:05:52.176Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T14:06:46.776Z"}
{"context":"BadRequestException","level":"error","message":"Bad Request Exception -> (trace not provided !)","timestamp":"2025-10-18T14:10:26.070Z"}
{"context":"BadRequestException","level":"error","message":"Bad Request Exception -> (trace not provided !)","timestamp":"2025-10-18T14:11:58.312Z"}
{"context":"BadRequestException","level":"error","message":"Bad Request Exception -> (trace not provided !)","timestamp":"2025-10-18T14:12:08.524Z"}
{"context":"BadRequestException","level":"error","message":"Bad Request Exception -> (trace not provided !)","timestamp":"2025-10-18T14:12:09.381Z"}
{"context":"BadRequestException","level":"error","message":"Bad Request Exception -> (trace not provided !)","timestamp":"2025-10-18T14:13:19.131Z"}
{"context":"PrismaClientKnownRequestError","level":"error","message":"\nInvalid `this.prisma.album.findUnique()` invocation in\n/Users/vitalikstefanisin/Documents/GitHub/rekogrinikfrontbeck/src/modules/public/publicGallery.controller.ts:19:43\n\n  16 \n  17 @Get(\"albums/:slug\")\n  18 async getBySlug(@Param(\"slug\") slug: string, @Query(\"tag\") tag?: string) {\n→ 19   const album = await this.prisma.album.findUnique(\nCan't reach database server at `ep-winter-shadow-addxhbeb-pooler.c-2.us-east-1.aws.neon.tech`:`5432`\n\nPlease make sure your database server is running at `ep-winter-shadow-addxhbeb-pooler.c-2.us-east-1.aws.neon.tech`:`5432`. -> (trace not provided !)","timestamp":"2025-10-18T14:56:29.356Z"}
{"context":"PrismaClientKnownRequestError","level":"error","message":"\nInvalid `this.prisma.album.findUnique()` invocation in\n/Users/vitalikstefanisin/Documents/GitHub/rekogrinikfrontbeck/src/modules/public/publicGallery.controller.ts:19:43\n\n  16 \n  17 @Get(\"albums/:slug\")\n  18 async getBySlug(@Param(\"slug\") slug: string, @Query(\"tag\") tag?: string) {\n→ 19   const album = await this.prisma.album.findUnique(\nCan't reach database server at `ep-winter-shadow-addxhbeb-pooler.c-2.us-east-1.aws.neon.tech`:`5432`\n\nPlease make sure your database server is running at `ep-winter-shadow-addxhbeb-pooler.c-2.us-east-1.aws.neon.tech`:`5432`. -> (trace not provided !)","timestamp":"2025-10-18T14:56:29.361Z"}
{"context":"PrismaClientKnownRequestError","level":"error","message":"\nInvalid `this.prisma.album.findUnique()` invocation in\n/Users/vitalikstefanisin/Documents/GitHub/rekogrinikfrontbeck/src/modules/public/publicGallery.controller.ts:19:43\n\n  16 \n  17 @Get(\"albums/:slug\")\n  18 async getBySlug(@Param(\"slug\") slug: string, @Query(\"tag\") tag?: string) {\n→ 19   const album = await this.prisma.album.findUnique(\nCan't reach database server at `ep-winter-shadow-addxhbeb-pooler.c-2.us-east-1.aws.neon.tech`:`5432`\n\nPlease make sure your database server is running at `ep-winter-shadow-addxhbeb-pooler.c-2.us-east-1.aws.neon.tech`:`5432`. -> (trace not provided !)","timestamp":"2025-10-18T14:56:29.364Z"}
{"context":"PrismaClientKnownRequestError","level":"error","message":"\nInvalid `this.prisma.album.findUnique()` invocation in\n/Users/vitalikstefanisin/Documents/GitHub/rekogrinikfrontbeck/src/modules/public/publicGallery.controller.ts:19:43\n\n  16 \n  17 @Get(\"albums/:slug\")\n  18 async getBySlug(@Param(\"slug\") slug: string, @Query(\"tag\") tag?: string) {\n→ 19   const album = await this.prisma.album.findUnique(\nTimed out fetching a new connection from the connection pool. More info: http://pris.ly/d/connection-pool (Current connection pool timeout: 10, connection limit: 17) -> (trace not provided !)","timestamp":"2025-10-18T17:25:29.371Z"}
{"context":"PrismaClientKnownRequestError","level":"error","message":"\nInvalid `this.prisma.album.findUnique()` invocation in\n/Users/vitalikstefanisin/Documents/GitHub/rekogrinikfrontbeck/src/modules/public/publicGallery.controller.ts:19:43\n\n  16 \n  17 @Get(\"albums/:slug\")\n  18 async getBySlug(@Param(\"slug\") slug: string, @Query(\"tag\") tag?: string) {\n→ 19   const album = await this.prisma.album.findUnique(\nTimed out fetching a new connection from the connection pool. More info: http://pris.ly/d/connection-pool (Current connection pool timeout: 10, connection limit: 17) -> (trace not provided !)","timestamp":"2025-10-18T17:25:29.382Z"}
{"context":"PrismaClientKnownRequestError","level":"error","message":"\nInvalid `this.prisma.album.findUnique()` invocation in\n/Users/vitalikstefanisin/Documents/GitHub/rekogrinikfrontbeck/src/modules/public/publicGallery.controller.ts:19:43\n\n  16 \n  17 @Get(\"albums/:slug\")\n  18 async getBySlug(@Param(\"slug\") slug: string, @Query(\"tag\") tag?: string) {\n→ 19   const album = await this.prisma.album.findUnique(\nTimed out fetching a new connection from the connection pool. More info: http://pris.ly/d/connection-pool (Current connection pool timeout: 10, connection limit: 17) -> (trace not provided !)","timestamp":"2025-10-18T17:25:29.332Z"}
{"context":"PrismaClientKnownRequestError","level":"error","message":"\nInvalid `this.prisma.album.findUnique()` invocation in\n/Users/vitalikstefanisin/Documents/GitHub/rekogrinikfrontbeck/src/modules/public/publicGallery.controller.ts:19:43\n\n  16 \n  17 @Get(\"albums/:slug\")\n  18 async getBySlug(@Param(\"slug\") slug: string, @Query(\"tag\") tag?: string) {\n→ 19   const album = await this.prisma.album.findUnique(\nTimed out fetching a new connection from the connection pool. More info: http://pris.ly/d/connection-pool (Current connection pool timeout: 10, connection limit: 17) -> (trace not provided !)","timestamp":"2025-10-18T17:49:53.780Z"}
{"context":"PrismaClientKnownRequestError","level":"error","message":"\nInvalid `this.prisma.album.findUnique()` invocation in\n/Users/vitalikstefanisin/Documents/GitHub/rekogrinikfrontbeck/src/modules/public/publicGallery.controller.ts:19:43\n\n  16 \n  17 @Get(\"albums/:slug\")\n  18 async getBySlug(@Param(\"slug\") slug: string, @Query(\"tag\") tag?: string) {\n→ 19   const album = await this.prisma.album.findUnique(\nTimed out fetching a new connection from the connection pool. More info: http://pris.ly/d/connection-pool (Current connection pool timeout: 10, connection limit: 17) -> (trace not provided !)","timestamp":"2025-10-18T17:49:53.763Z"}
{"context":"PrismaClientKnownRequestError","level":"error","message":"\nInvalid `this.prisma.album.findUnique()` invocation in\n/Users/vitalikstefanisin/Documents/GitHub/rekogrinikfrontbeck/src/modules/public/publicGallery.controller.ts:19:43\n\n  16 \n  17 @Get(\"albums/:slug\")\n  18 async getBySlug(@Param(\"slug\") slug: string, @Query(\"tag\") tag?: string) {\n→ 19   const album = await this.prisma.album.findUnique(\nTimed out fetching a new connection from the connection pool. More info: http://pris.ly/d/connection-pool (Current connection pool timeout: 10, connection limit: 17) -> (trace not provided !)","timestamp":"2025-10-18T17:50:49.388Z"}
{"context":"BadRequestException","level":"error","message":"Bad Request Exception -> (trace not provided !)","timestamp":"2025-10-18T18:10:44.073Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T18:12:17.833Z"}
{"context":"NotFoundError","level":"error","message":"No Hero found -> (trace not provided !)","timestamp":"2025-10-18T18:12:26.374Z"}
{"context":"NotFoundError","level":"error","message":"No Hero found -> (trace not provided !)","timestamp":"2025-10-18T18:15:28.801Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T18:15:34.137Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T18:15:44.790Z"}
{"context":"BadRequestException","level":"error","message":"Bad Request Exception -> (trace not provided !)","timestamp":"2025-10-18T18:22:28.648Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T18:23:59.261Z"}
{"context":"PrismaClientKnownRequestError","level":"error","message":"\nInvalid `this.prisma.user.findUnique()` invocation in\n/Users/vitalikstefanisin/Documents/GitHub/rekogrinikfrontbeck/src/modules/auth/auth.jwt.strategy.ts:27:41\n\n  24 \n  25 async validate(payload: User): Promise<User> {\n  26   const email = payload.email;\n→ 27   const user = await this.prisma.user.findUnique(\nTimed out fetching a new connection from the connection pool. More info: http://pris.ly/d/connection-pool (Current connection pool timeout: 10, connection limit: 17) -> (trace not provided !)","timestamp":"2025-10-18T18:35:42.824Z"}
{"context":"PrismaClientKnownRequestError","level":"error","message":"\nInvalid `this.prisma.user.findUnique()` invocation in\n/Users/vitalikstefanisin/Documents/GitHub/rekogrinikfrontbeck/src/modules/auth/auth.jwt.strategy.ts:27:41\n\n  24 \n  25 async validate(payload: User): Promise<User> {\n  26   const email = payload.email;\n→ 27   const user = await this.prisma.user.findUnique(\nTimed out fetching a new connection from the connection pool. More info: http://pris.ly/d/connection-pool (Current connection pool timeout: 10, connection limit: 17) -> (trace not provided !)","timestamp":"2025-10-18T18:36:17.547Z"}
{"context":"BadRequestException","level":"error","message":"Bad Request Exception -> (trace not provided !)","timestamp":"2025-10-18T18:39:02.532Z"}
{"context":"NotFoundError","level":"error","message":"No Hero found -> (trace not provided !)","timestamp":"2025-10-18T18:56:48.269Z"}
{"context":"NotFoundError","level":"error","message":"No Hero found -> (trace not provided !)","timestamp":"2025-10-18T18:57:56.949Z"}
{"context":"NotFoundError","level":"error","message":"No Hero found -> (trace not provided !)","timestamp":"2025-10-18T18:58:08.469Z"}
{"context":"NotFoundError","level":"error","message":"No Hero found -> (trace not provided !)","timestamp":"2025-10-18T18:59:26.152Z"}
{"context":"NotFoundError","level":"error","message":"No Hero found -> (trace not provided !)","timestamp":"2025-10-18T18:59:56.772Z"}
{"context":"NotFoundError","level":"error","message":"No Hero found -> (trace not provided !)","timestamp":"2025-10-18T19:21:13.877Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T19:21:31.398Z"}
{"context":"UnauthorizedException","level":"error","message":"Unauthorized -> (trace not provided !)","timestamp":"2025-10-18T19:21:38.780Z"}
{"context":"NotFoundError","level":"error","message":"No Hero found -> (trace not provided !)","timestamp":"2025-10-18T19:25:56.998Z"}
{"context":"NotFoundError","level":"error","message":"No Hero found -> (trace not provided !)","timestamp":"2025-10-18T20:10:01.803Z"}
{"context":"NotFoundError","level":"error","message":"No Hero found -> (trace not provided !)","timestamp":"2025-10-18T20:10:06.035Z"}
{"context":"NotFoundError","level":"error","message":"No Hero found -> (trace not provided !)","timestamp":"2025-10-18T20:11:14.657Z"}
{"context":"NotFoundError","level":"error","message":"No Hero found -> (trace not provided !)","timestamp":"2025-10-18T21:41:30.226Z"}
{"context":"NotFoundException","level":"error","message":"Cannot POST /api/v1/gallery/albums/2/recreate-pairs -> (trace not provided !)","timestamp":"2025-10-18T22:00:07.040Z"}
